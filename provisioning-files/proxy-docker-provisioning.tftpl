#!/bin/bash

# This script is used to provision a Linux instance using the instance configured as network proxy  
# It receives the IP address of the proxy instance as a parameter

# Give time for the proxy instance to be fully configured
sleep 30

# Which OS are we running on?
OS=$(cat /etc/os-release | grep "^ID=" | cut -d "=" -f 2 | xargs)
PROXY_IP="http://${proxy}:3128"
HTTP_PROXY="http_proxy=$PROXY_IP"
HTTPS_PROXY="https_proxy=$PROXY_IP"

# Docker installation depending on the OS
case $OS in

    "debian" | "ubuntu")
		sudo $HTTP_PROXY apt-get update -y
		sudo $HTTP_PROXY apt-get install ca-certificates curl gnupg lsb-release -y
	
		if [[ $OS == "debian" ]]
		then
			curl -x $PROXY_IP -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
			echo \
			"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
			$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

		elif [[ $OS == "ubuntu" ]]
		then
		        curl -x $PROXY_IP -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
			echo \
			"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
			$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
		fi

		sudo $HTTP_PROXY apt-get update -y
		sudo $HTTP_PROXY apt-get install docker-ce docker-ce-cli containerd.io -y
    ;;
esac

# Start Docker daemon and run Docker container
mkdir /etc/systemd/system/docker.service.d
sudo -s
echo "[Service]
Environment=HTTP_PROXY=$PROXY_IP
Environment=HTTPS_PROXY=$PROXY_IP" > /etc/systemd/system/docker.service.d/http-proxy.conf 
sudo systemctl daemon-reload
systemctl restart docker
docker run ${args} ${image}:${tag}
exit
